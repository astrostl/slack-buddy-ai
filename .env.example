# Slack Butler - Environment Configuration Example
# Copy this file to .env and update with your actual values

# =============================================================================
# SLACK CONFIGURATION
# =============================================================================

# Your Slack Bot User OAuth Token
# Get this from: https://api.slack.com/apps -> Your App -> OAuth & Permissions
# Format: xoxb-xxxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx
export SLACK_TOKEN=xoxb-your-bot-token-here

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: debug, info, warn, error (default: info)
export SLACK_LOG_LEVEL=info

# Log format: text, json (default: text)
# Use 'json' for production environments
export SLACK_LOG_FORMAT=text

# Disable colored output: true, false (default: false)
# Set to 'true' when redirecting logs to files
export SLACK_LOG_NO_COLOR=false

# Enable debug mode: true, false (default: false)
# Alternative to --debug flag, sets log level to debug
export SLACK_DEBUG=false

# =============================================================================
# REQUIRED SLACK APP PERMISSIONS
# =============================================================================
# To use slack-butler, your Slack app must have these OAuth scopes:
#
# Bot Token Scopes:
# - channels:read    (to list and detect new channels) 
# - channels:join    (to join public channels for warnings)
# - channels:manage  (to archive channels)
# - channels:history (to check for activity and announcements)
# - chat:write       (to post announcements and warnings)
# - users:read       (to resolve user names in messages)
#
# Add these scopes at: https://api.slack.com/apps -> Your App -> OAuth & Permissions
# Then reinstall the app to your workspace to get the updated token.

# =============================================================================
# USAGE EXAMPLES
# =============================================================================
# After setting up the token above, you can use slack-butler like this:
#
# Source the environment:
#   source .env
#
# Note: All variables are exported so they're available to the slack-butler binary
#
# Basic channel detection (last 8 days - default):
#   slack-butler channels detect
#
# Custom time period with announcement:
#   slack-butler channels detect --since=7 --announce-to=#general
#
# Using token flag directly (overrides environment):
#   slack-butler channels detect --token=xoxb-your-token --since=3
#
# Channel archival (dry run by default):
#   slack-butler channels archive
#
# Channel archival with custom thresholds (actually execute):
#   slack-butler channels archive --warn-days=30 --archive-days=30 --commit

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Edit .env and replace 'xoxb-your-bot-token-here' with your actual token
# 3. Make sure .env is in .gitignore (it should be already)
# 4. Test with: slack-butler channels detect --help
#
# If you get permission errors, check that your Slack app has the required
# OAuth scopes listed above and has been reinstalled to your workspace.

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Never commit your actual .env file with real tokens
# - The .env file is git-ignored for security
# - Slack tokens start with 'xoxb-' for bot tokens
# - Keep your tokens secure and rotate them periodically
# - Use workspace-specific tokens for better security isolation