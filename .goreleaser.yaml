# GoReleaser configuration for slack-buddy-ai
# Build: goreleaser build --snapshot --clean
# Release: goreleaser release --snapshot --clean

version: 1

project_name: slack-buddy

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: slack-buddy
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    # Build flags
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X main.Version={{.Version}}
      - -X main.BuildTime={{.Date}}
      - -X main.GitCommit={{.Commit}}
    # Output binary name
    binary: slack-buddy

archives:
  - id: default
    format: tar.gz
    # Use zip for Windows
    format_overrides:
      - goos: windows
        format: zip
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE
      - CHANGELOG.md

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^build:"
      - "^style:"
      - "^refactor:"
      - "Merge pull request"
      - "Merge branch"
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999

# Local release settings
release:
  # Disable GitHub release for local-only builds
  disable: true
  
# Metadata
metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

# Disable universal binaries on macOS for simplicity
universal_binaries:
  - replace: false